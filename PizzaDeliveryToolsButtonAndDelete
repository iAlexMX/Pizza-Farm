local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local root = character:WaitForChild("HumanoidRootPart")
local active = false
local MAX_DISTANCE = 30

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 30, 0, 30)
ToggleButton.Position = UDim2.new(0, 760, 0, 141)
ToggleButton.Text = "Off"
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 10
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Parent = ScreenGui

local DeleteButton = Instance.new("TextButton")
DeleteButton.Size = UDim2.new(0, 30, 0, 30)
DeleteButton.Position = UDim2.new(0, 760, 0, 178)
DeleteButton.Text = "Eliminar"
DeleteButton.Font = Enum.Font.SourceSansBold
DeleteButton.TextSize = 8
DeleteButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
DeleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DeleteButton.Parent = ScreenGui

local dragging = false
local dragStart
local startPos

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
        dragStart = input.Position
        startPos = ToggleButton.Position
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        local delta = input.Position - dragStart
        ToggleButton.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

ToggleButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

local function UpdateCharacterReferences(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    root = character:WaitForChild("HumanoidRootPart")
end

local function FindNearbyDeliveryTools(parent)
    local tools = {}
    for _, item in ipairs(parent:GetChildren()) do
        if item:IsA("Tool") and item.Name:match("^%u%d$") and item:FindFirstChild("Handle") and item:FindFirstChild("House") then
            if (item.Handle.Position - root.Position).Magnitude <= MAX_DISTANCE then
                table.insert(tools, item)
            end
        end
    end
    return tools
end

local function CollectTools()
    if not active then return end

    local nearbyTools = FindNearbyDeliveryTools(workspace)
    if #nearbyTools > 0 then
        for _, tool in ipairs(nearbyTools) do
            if tool.Parent == workspace then
                humanoid:EquipTool(tool)
                wait(0.1)
            end
        end

        wait(0.3)
        for _, tool in ipairs(FindNearbyDeliveryTools(character)) do
            tool.Parent = player.Backpack
        end
    end
end

player.CharacterAdded:Connect(function(newCharacter)
    UpdateCharacterReferences(newCharacter)
end)

ToggleButton.MouseButton1Click:Connect(function()
    active = not active
    ToggleButton.Text = active and "On" or "Off"
    ToggleButton.BackgroundColor3 = active and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(255, 0, 0)
end)

DeleteButton.MouseButton1Click:Connect(function()
    ToggleButton:Destroy()
    DeleteButton:Destroy()
    game:GetService("RunService").Heartbeat:Disconnect() 
end)

while true do
    CollectTools()
    wait(0)
end