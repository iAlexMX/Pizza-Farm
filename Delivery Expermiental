local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer

player.Character.ChildAdded:Connect(function(item)
    if item:FindFirstChild("House") then
        local house = item.House.Value
        local door = house:GetDescendants()
        local selectedItem = nil

        -- Verificar si el jugador tiene pizza o soda seleccionada
        local function checkSelectedItem()
            for _, descendant in ipairs(player.Backpack:GetChildren()) do
                if descendant:IsA("Tool") and (descendant.Name == "Pizza" or descendant.Name == "Soda") then
                    selectedItem = descendant
                    return
                end
            end
        end

        -- Deshabilitar y habilitar asientos
        local function setSeats(enabled)
            for _, part in ipairs(workspace:GetDescendants()) do
                if part:IsA("Seat") or part:IsA("VehicleSeat") then
                    part.Disabled = not enabled
                end
            end
        end

        -- Deshabilitar los asientos antes de comenzar
        setSeats(false)

        for i = 1, #door do
            if door[i].Name == "GivePizza" then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    local doorCFrame = door[i].CFrame
                    local belowStartPosition = humanoidRootPart.CFrame * CFrame.new(0, -60, 0)
                    local belowDoorPosition = doorCFrame * CFrame.new(0, -60, 0)
                    local finalBelowPosition = doorCFrame * CFrame.new(0, -60, 0)

                    -- Tween 1: Bajar rápidamente
                    local tweenInfo1 = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                    local goal1 = {CFrame = belowStartPosition}
                    local tween1 = TweenService:Create(humanoidRootPart, tweenInfo1, goal1)

                    -- Tween 2: Mover lentamente hacia la puerta
                    local tweenInfo2 = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                    local goal2 = {CFrame = belowDoorPosition}
                    local tween2 = TweenService:Create(humanoidRootPart, tweenInfo2, goal2)

                    -- Tween 3: Subir a la puerta
                    local tweenInfo3 = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                    local goal3 = {CFrame = doorCFrame}
                    local tween3 = TweenService:Create(humanoidRootPart, tweenInfo3, goal3)

                    -- Tween 4: Bajar lentamente a la pierna o puerta según el caso
                    local tweenInfo4 = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                    local goal4
                    local rightLeg = workspace:FindFirstChild("Skeleton") and workspace.Skeleton:FindFirstChild("Right Leg")

                    checkSelectedItem()
                    if selectedItem then
                        goal4 = {CFrame = doorCFrame}
                    elseif rightLeg then
                        goal4 = {CFrame = rightLeg.CFrame}
                    else
                        warn("No se encontró la pierna, moviendo a la posición por defecto.")
                        goal4 = {CFrame = finalBelowPosition}
                    end

                    local tween4 = TweenService:Create(humanoidRootPart, tweenInfo4, goal4)

                    -- Ejecutar secuencia de tweens
                    tween1:Play()
                    tween1.Completed:Connect(function()
                        tween2:Play()
                        tween2.Completed:Connect(function()
                            tween3:Play()
                            tween3.Completed:Connect(function()
                                tween4:Play()
                                tween4.Completed:Connect(function()
                                    setSeats(true) -- Habilitar los asientos al terminar
                                end)
                            end)
                        end)
                    end)
                end
            end
        end
    end
end)
