local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local lastDoor = nil -- Variable para almacenar la última puerta utilizada
local isAtLastDoor = false -- Variable para indicar si ya está debajo de la última puerta

-- Función para mover al jugador con Tween
local function moveWithTween(humanoidRootPart, targetCFrame, duration, onComplete)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
    local goal = {CFrame = targetCFrame}
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
    tween:Play()
    if onComplete then
        tween.Completed:Connect(onComplete)
    end
end

-- Función para manejar el movimiento del jugador
local function handleMovement(humanoidRootPart, door)
    local belowDoorPosition = door.CFrame * CFrame.new(0, -60, 0) -- Posición fija debajo de la puerta
    local doorPosition = door.CFrame -- Posición en la puerta

    -- Verificar si la puerta es la misma que la última
    if lastDoor == door and isAtLastDoor then
        -- Si es la misma puerta y ya está debajo, no hacer nada más
        return
    end

    -- Si es una nueva puerta o no estaba debajo de la anterior
    lastDoor = door -- Actualizar la última puerta
    isAtLastDoor = false -- Aún no está debajo de esta puerta

    -- Secuencia de movimientos
    local belowStartPosition = humanoidRootPart.CFrame * CFrame.new(0, -60, 0) -- Baja inicial

    -- Paso 1: Baja rápidamente a -60
    moveWithTween(humanoidRootPart, belowStartPosition, 0.2, function()
        -- Paso 2: Moverse horizontalmente a -60 debajo de la puerta
        moveWithTween(humanoidRootPart, belowDoorPosition, 10, function()
            -- Paso 3: Subir a la puerta
            moveWithTween(humanoidRootPart, doorPosition, 2, function()
                -- Paso 4: Bajar a -60 y quedarse allí
                moveWithTween(humanoidRootPart, belowDoorPosition, 0.9, function()
                    isAtLastDoor = true -- Ahora está debajo de la puerta
                end)
            end)
        end)
    end)
end

-- Evento para detectar cuando se equipa una pizza o soda
player.Character.ChildAdded:Connect(function(item)
    if item:IsA("Tool") and (item.Name == "Pizza" or item.Name == "Soda") then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            local house = item:FindFirstChild("House") and item.House.Value
            if house then
                local door = nil
                for _, part in ipairs(house:GetDescendants()) do
                    if part.Name == "GivePizza" then
                        door = part
                        break
                    end
                end

                if door then
                    handleMovement(humanoidRootPart, door)
                end
            end
        end
    end
end)
