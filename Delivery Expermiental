local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer

player.Character.ChildAdded:Connect(function(item)
    if item:FindFirstChild("House") then
        local house = item.House.Value
        local door = house:GetDescendants()

        for i = 1, #door do
            if door[i].Name == "GivePizza" then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    -- Posición por debajo inicial
                    local belowStartPosition = humanoidRootPart.CFrame * CFrame.new(0, -60, 0) -- 60 unidades abajo desde la posición actual
                    local belowDoorPosition = door[i].CFrame * CFrame.new(0, -60, 0) -- 60 unidades abajo desde la puerta
                    local doorPosition = door[i].CFrame -- Posición exacta de la puerta
                    local finalBelowPosition = door[i].CFrame * CFrame.new(0, -55, 0) -- 55 unidades abajo de la puerta

                    -- 1. Tween para bajar rápidamente
                    local tweenInfo1 = TweenInfo.new(
                        0.2, -- Duración rápida para bajar (200 ms)
                        Enum.EasingStyle.Linear,
                        Enum.EasingDirection.InOut
                    )
                    local goal1 = {CFrame = belowStartPosition}
                    local tween1 = TweenService:Create(humanoidRootPart, tweenInfo1, goal1)

                    -- 2. Tween para moverse lentamente hacia la puerta (por debajo del mapa)
                    local tweenInfo2 = TweenInfo.new(
                        10, -- Duración para moverse horizontalmente (10 segundos)
                        Enum.EasingStyle.Linear,
                        Enum.EasingDirection.InOut
                    )
                    local goal2 = {CFrame = belowDoorPosition}
                    local tween2 = TweenService:Create(humanoidRootPart, tweenInfo2, goal2)

                    -- 3. Tween para subir hacia la puerta
                    local tweenInfo3 = TweenInfo.new(
                        2, -- Duración para subir hacia la puerta
                        Enum.EasingStyle.Linear,
                        Enum.EasingDirection.InOut
                    )
                    local goal3 = {CFrame = doorPosition}
                    local tween3 = TweenService:Create(humanoidRootPart, tweenInfo3, goal3)

                    -- 4. Tween para mover al jugador a la pieza Right Leg
                    local tweenInfo4 = TweenInfo.new(
                        0.10, -- Duración rápida para bajar (300 ms)
                        Enum.EasingStyle.Linear,
                        Enum.EasingDirection.InOut
                    )

                    -- Reemplazar la posición de finalBelowPosition por la posición de la pieza "Right Leg"
                    local rightLeg = workspace:FindFirstChild("Skeleton") and workspace.Skeleton:FindFirstChild("Right Leg")
                    local goal4
                    if rightLeg then
                        goal4 = {CFrame = rightLeg.CFrame} -- Mover a la posición de Right Leg
                    else
                        warn("No se encontró la pieza Right Leg en Skeleton.")
                        goal4 = {CFrame = finalBelowPosition} -- Si no se encuentra la pierna, seguir con la posición por defecto
                    end

                    local tween4 = TweenService:Create(humanoidRootPart, tweenInfo4, goal4)

                    -- Secuencia de Tweens
                    tween1:Play() -- Baja rápidamente
                    tween1.Completed:Connect(function()
                        tween2:Play() -- Se mueve lentamente hacia la puerta
                        tween2.Completed:Connect(function()
                            tween3:Play() -- Sube hacia la puerta
                            tween3.Completed:Connect(function()
                                tween4:Play() -- Mueve finalmente a la posición de Right Leg
                            end)
                        end)
                    end)
                end
            end
        end
    end
end)
